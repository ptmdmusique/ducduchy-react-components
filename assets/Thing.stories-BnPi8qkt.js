import{j as i}from"./jsx-runtime-D_zvdyIk.js";const n=({children:e})=>i.jsx("div",{className:"flex items-center justify-center w-5/6 m-auto py-2 text-2xl text-center text-skin-success uppercase bg-skin-top shadow-xl rounded-3xl",children:e||"Hello World! (❁´◡`❁)"});try{n.displayName="Thing",n.__docgenInfo={description:"",displayName:"Thing",props:{}}}catch{}try{AlertBanner.displayName="AlertBanner",AlertBanner.__docgenInfo={description:"",displayName:"AlertBanner",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},iconClassName:{defaultValue:null,description:"",name:"iconClassName",required:!1,type:{name:"string"}},iconContainerClassName:{defaultValue:null,description:"",name:"iconContainerClassName",required:!1,type:{name:"string"}},contentClassName:{defaultValue:null,description:"",name:"contentClassName",required:!1,type:{name:"string"}},colorType:{defaultValue:null,description:"",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"danger"'},{value:'"warning"'},{value:'"info"'},{value:'"neutral"'}]}},header:{defaultValue:null,description:"Use a plain string header if you want to use the pre-styled option",name:"header",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"Use a plain string description if you want to use the pre-styled option",name:"description",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"[IconPrefix, string]"}},hasShadow:{defaultValue:{value:"true"},description:"",name:"hasShadow",required:!1,type:{name:"boolean"}},roundedCorner:{defaultValue:{value:"true"},description:"",name:"roundedCorner",required:!1,type:{name:"boolean"}},borderPlacement:{defaultValue:{value:"top"},description:"",name:"borderPlacement",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"left"'},{value:'"right"'}]}}}}}catch{}try{Badge.displayName="Badge",Badge.__docgenInfo={description:"",displayName:"Badge",props:{colorType:{defaultValue:{value:"info"},description:"",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"danger"'},{value:'"warning"'},{value:'"info"'},{value:'"neutral"'}]}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},type:{defaultValue:{value:"filled"},description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"outline"'},{value:'"filled"'}]}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"[IconPrefix, string]"}},iconClassName:{defaultValue:null,description:"",name:"iconClassName",required:!1,type:{name:"string"}},text:{defaultValue:null,description:"",name:"text",required:!1,type:{name:"string"}}}}}catch{}try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"reset"'},{value:'"submit"'}]}},borderType:{defaultValue:{value:"fill"},description:"",name:"borderType",required:!1,type:{name:"enum",value:[{value:'"fill"'},{value:'"outline"'},{value:'"plain"'}]}},colorType:{defaultValue:{value:"secondary"},description:"",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"danger"'},{value:'"warning"'},{value:'"info"'},{value:'"neutral"'}]}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"[IconPrefix, string]"}},iconClassName:{defaultValue:null,description:"",name:"iconClassName",required:!1,type:{name:"string"}},iconPlacement:{defaultValue:{value:"left"},description:"",name:"iconPlacement",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!1,type:{name:"boolean"}},isRounded:{defaultValue:null,description:"",name:"isRounded",required:!1,type:{name:"boolean"}},withBackground:{defaultValue:null,description:"",name:"withBackground",required:!1,type:{name:"boolean"}},loadingIcon:{defaultValue:null,description:"",name:"loadingIcon",required:!1,type:{name:"[IconPrefix, string]"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).",name:"ref",required:!1,type:{name:"Ref<HTMLButtonElement>"}},useFocusStyle:{defaultValue:null,description:"",name:"useFocusStyle",required:!1,type:{name:"boolean"}}}}}catch{}try{ColorPicker.displayName="ColorPicker",ColorPicker.__docgenInfo={description:"",displayName:"ColorPicker",props:{defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},colorDisplayType:{defaultValue:{value:"hex"},description:"",name:"colorDisplayType",required:!1,type:{name:"enum",value:[{value:'"hex"'}]}},frequentlyUsedColorList:{defaultValue:null,description:"",name:"frequentlyUsedColorList",required:!1,type:{name:"string[]"}},hidePicker:{defaultValue:null,description:"",name:"hidePicker",required:!1,type:{name:"boolean"}},borderType:{defaultValue:null,description:"",name:"borderType",required:!1,type:{name:"enum",value:[{value:'"fill"'},{value:'"outline"'},{value:'"plain"'}]}},caption:{defaultValue:null,description:"",name:"caption",required:!1,type:{name:"ReactNode"}},captionIcon:{defaultValue:null,description:"",name:"captionIcon",required:!1,type:{name:"[IconPrefix, string]"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"error"'}]}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},leadingAdornment:{defaultValue:null,description:"",name:"leadingAdornment",required:!1,type:{name:"FormAdornment"}},leadingAdornmentOnClick:{defaultValue:null,description:"",name:"leadingAdornmentOnClick",required:!1,type:{name:"(() => void)"}},trailingAdornment:{defaultValue:null,description:"",name:"trailingAdornment",required:!1,type:{name:"FormAdornment"}},trailingAdornmentOnClick:{defaultValue:null,description:"",name:"trailingAdornmentOnClick",required:!1,type:{name:"(() => void)"}},hasContent:{defaultValue:null,description:"",name:"hasContent",required:!1,type:{name:"boolean"}},debounceParam:{defaultValue:null,description:"",name:"debounceParam",required:!1,type:{name:"{ debounceTime: number; flushOnUnmount?: boolean; }"}},formControl:{defaultValue:null,description:"",name:"formControl",required:!1,type:{name:"Control<any>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLInputElement>"}}}}}catch{}try{DatePicker.displayName="DatePicker",DatePicker.__docgenInfo={description:"",displayName:"DatePicker",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},formValidation:{defaultValue:null,description:"",name:"formValidation",required:!1,type:{name:"FormValidationWithController<Form>"}},caption:{defaultValue:null,description:"",name:"caption",required:!1,type:{name:"ReactNode"}},captionIcon:{defaultValue:null,description:"",name:"captionIcon",required:!1,type:{name:"[IconPrefix, string]"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"error"'}]}},calendarLeadingIcon:{defaultValue:{value:'["fas", "calendar-alt"]'},description:"",name:"calendarLeadingIcon",required:!1,type:{name:"[IconPrefix, string]"}},clearDateIcon:{defaultValue:{value:'["fas", "times"]'},description:"",name:"clearDateIcon",required:!1,type:{name:"[IconPrefix, string]"}},toggleDropdown:{defaultValue:null,description:"",name:"toggleDropdown",required:!1,type:{name:"(() => void)"}},clearValue:{defaultValue:null,description:"",name:"clearValue",required:!1,type:{name:"(() => void)"}},value:{defaultValue:null,description:`Input value. Note that if you pass an array of values, only first value will be fully utilized.
@example new Date(2017, 0, 1)
@example [new Date(2017, 0, 1), new Date(2017, 7, 1)]
@example ['2017-01-01', '2017-08-01']`,name:"value",required:!1,type:{name:"(string & LooseValue)"}},disabled:{defaultValue:{value:"false"},description:`Whether the date picker should be disabled.
@example true`,name:"disabled",required:!1,type:{name:"boolean"}},useInput:{defaultValue:null,description:"",name:"useInput",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Function called when the user picks a valid date. If any of the fields were excluded using custom `format`, `new Date(y, 0, 1, 0, 0, 0)`, where `y` is the current year, is going to serve as a \"base\".\n@example (value) => alert('New date is: ', value)",name:"onChange",required:!1,type:{name:"(((value: Value) => void) & ((date: Date | null, event?: ChangeEvent<HTMLInputElement>) => void))"}},name:{defaultValue:{value:"'date'"},description:"Input name.",name:"name",required:!1,type:{name:"string"}},required:{defaultValue:{value:"false"},description:`Whether date input should be required.
@example true`,name:"required",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:`Automatically focuses the input on mount.
@example true`,name:"autoFocus",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Class name(s) that will be added along with `\"react-date-picker\"` to the main React-Date-Picker `<div>` element.\n@example 'class1 class2'\n@example ['class1', 'class2 class3']",name:"className",required:!1,type:{name:"ClassName"}},id:{defaultValue:null,description:"`id` attribute for the main React-Date-Picker `<div>` element.\n@example 'date-picker'",name:"id",required:!1,type:{name:"string"}},onCopy:{defaultValue:null,description:"",name:"onCopy",required:!1,type:{name:"((event: any) => void)"}},onCut:{defaultValue:null,description:"",name:"onCut",required:!1,type:{name:"((event: any) => void)"}},onPaste:{defaultValue:null,description:"",name:"onPaste",required:!1,type:{name:"((event: any) => void)"}},onCompositionEnd:{defaultValue:null,description:"",name:"onCompositionEnd",required:!1,type:{name:"((event: any) => void)"}},onCompositionStart:{defaultValue:null,description:"",name:"onCompositionStart",required:!1,type:{name:"((event: any) => void)"}},onCompositionUpdate:{defaultValue:null,description:"",name:"onCompositionUpdate",required:!1,type:{name:"((event: any) => void)"}},onFocus:{defaultValue:null,description:`Function called when the user focuses an input.
@example (event) => alert('Focused input: ', event.target.name)`,name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((event: any) => void)"}},onInput:{defaultValue:null,description:"",name:"onInput",required:!1,type:{name:"((event: any) => void)"}},onReset:{defaultValue:null,description:"",name:"onReset",required:!1,type:{name:"((event: any) => void)"}},onSubmit:{defaultValue:null,description:"",name:"onSubmit",required:!1,type:{name:"((event: any) => void)"}},onInvalid:{defaultValue:null,description:"",name:"onInvalid",required:!1,type:{name:"((event: any) => void)"}},onLoad:{defaultValue:null,description:"",name:"onLoad",required:!1,type:{name:"((event: any) => void)"}},onError:{defaultValue:null,description:"",name:"onError",required:!1,type:{name:"((event: any) => void)"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"((event: any) => void)"}},onKeyPress:{defaultValue:null,description:"",name:"onKeyPress",required:!1,type:{name:"((event: any) => void)"}},onKeyUp:{defaultValue:null,description:"",name:"onKeyUp",required:!1,type:{name:"((event: any) => void)"}},onAbort:{defaultValue:null,description:"",name:"onAbort",required:!1,type:{name:"((event: any) => void)"}},onCanPlay:{defaultValue:null,description:"",name:"onCanPlay",required:!1,type:{name:"((event: any) => void)"}},onCanPlayThrough:{defaultValue:null,description:"",name:"onCanPlayThrough",required:!1,type:{name:"((event: any) => void)"}},onDurationChange:{defaultValue:null,description:"",name:"onDurationChange",required:!1,type:{name:"((event: any) => void)"}},onEmptied:{defaultValue:null,description:"",name:"onEmptied",required:!1,type:{name:"((event: any) => void)"}},onEncrypted:{defaultValue:null,description:"",name:"onEncrypted",required:!1,type:{name:"((event: any) => void)"}},onEnded:{defaultValue:null,description:"",name:"onEnded",required:!1,type:{name:"((event: any) => void)"}},onLoadedData:{defaultValue:null,description:"",name:"onLoadedData",required:!1,type:{name:"((event: any) => void)"}},onLoadedMetadata:{defaultValue:null,description:"",name:"onLoadedMetadata",required:!1,type:{name:"((event: any) => void)"}},onLoadStart:{defaultValue:null,description:"",name:"onLoadStart",required:!1,type:{name:"((event: any) => void)"}},onPause:{defaultValue:null,description:"",name:"onPause",required:!1,type:{name:"((event: any) => void)"}},onPlay:{defaultValue:null,description:"",name:"onPlay",required:!1,type:{name:"((event: any) => void)"}},onPlaying:{defaultValue:null,description:"",name:"onPlaying",required:!1,type:{name:"((event: any) => void)"}},onProgress:{defaultValue:null,description:"",name:"onProgress",required:!1,type:{name:"((event: any) => void)"}},onRateChange:{defaultValue:null,description:"",name:"onRateChange",required:!1,type:{name:"((event: any) => void)"}},onSeeked:{defaultValue:null,description:"",name:"onSeeked",required:!1,type:{name:"((event: any) => void)"}},onSeeking:{defaultValue:null,description:"",name:"onSeeking",required:!1,type:{name:"((event: any) => void)"}},onStalled:{defaultValue:null,description:"",name:"onStalled",required:!1,type:{name:"((event: any) => void)"}},onSuspend:{defaultValue:null,description:"",name:"onSuspend",required:!1,type:{name:"((event: any) => void)"}},onTimeUpdate:{defaultValue:null,description:"",name:"onTimeUpdate",required:!1,type:{name:"((event: any) => void)"}},onVolumeChange:{defaultValue:null,description:"",name:"onVolumeChange",required:!1,type:{name:"((event: any) => void)"}},onWaiting:{defaultValue:null,description:"",name:"onWaiting",required:!1,type:{name:"((event: any) => void)"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((event: any) => void)"}},onContextMenu:{defaultValue:null,description:"",name:"onContextMenu",required:!1,type:{name:"((event: any) => void)"}},onDoubleClick:{defaultValue:null,description:"",name:"onDoubleClick",required:!1,type:{name:"((event: any) => void)"}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:"((event: any) => void)"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:"((event: any) => void)"}},onDragEnter:{defaultValue:null,description:"",name:"onDragEnter",required:!1,type:{name:"((event: any) => void)"}},onDragExit:{defaultValue:null,description:"",name:"onDragExit",required:!1,type:{name:"((event: any) => void)"}},onDragLeave:{defaultValue:null,description:"",name:"onDragLeave",required:!1,type:{name:"((event: any) => void)"}},onDragOver:{defaultValue:null,description:"",name:"onDragOver",required:!1,type:{name:"((event: any) => void)"}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:"((event: any) => void)"}},onDrop:{defaultValue:null,description:"",name:"onDrop",required:!1,type:{name:"((event: any) => void)"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"((event: any) => void)"}},onMouseEnter:{defaultValue:null,description:"",name:"onMouseEnter",required:!1,type:{name:"((event: any) => void)"}},onMouseLeave:{defaultValue:null,description:"",name:"onMouseLeave",required:!1,type:{name:"((event: any) => void)"}},onMouseMove:{defaultValue:null,description:"",name:"onMouseMove",required:!1,type:{name:"((event: any) => void)"}},onMouseOut:{defaultValue:null,description:"",name:"onMouseOut",required:!1,type:{name:"((event: any) => void)"}},onMouseOver:{defaultValue:null,description:"",name:"onMouseOver",required:!1,type:{name:"((event: any) => void)"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"((event: any) => void)"}},onSelect:{defaultValue:null,description:"",name:"onSelect",required:!1,type:{name:"((event: any) => void)"}},onTouchCancel:{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"((event: any) => void)"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"((event: any) => void)"}},onTouchMove:{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"((event: any) => void)"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"((event: any) => void)"}},onPointerDown:{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"((event: any) => void)"}},onPointerMove:{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"((event: any) => void)"}},onPointerUp:{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"((event: any) => void)"}},onPointerCancel:{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"((event: any) => void)"}},onPointerEnter:{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"((event: any) => void)"}},onPointerLeave:{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"((event: any) => void)"}},onPointerOver:{defaultValue:null,description:"",name:"onPointerOver",required:!1,type:{name:"((event: any) => void)"}},onPointerOut:{defaultValue:null,description:"",name:"onPointerOut",required:!1,type:{name:"((event: any) => void)"}},onGotPointerCapture:{defaultValue:null,description:"",name:"onGotPointerCapture",required:!1,type:{name:"((event: any) => void)"}},onLostPointerCapture:{defaultValue:null,description:"",name:"onLostPointerCapture",required:!1,type:{name:"((event: any) => void)"}},onScroll:{defaultValue:null,description:"",name:"onScroll",required:!1,type:{name:"((event: any) => void)"}},onWheel:{defaultValue:null,description:"",name:"onWheel",required:!1,type:{name:"((event: any) => void)"}},onAnimationStart:{defaultValue:null,description:"",name:"onAnimationStart",required:!1,type:{name:"((event: any) => void)"}},onAnimationEnd:{defaultValue:null,description:"",name:"onAnimationEnd",required:!1,type:{name:"((event: any) => void)"}},onAnimationIteration:{defaultValue:null,description:"",name:"onAnimationIteration",required:!1,type:{name:"((event: any) => void)"}},onToggle:{defaultValue:null,description:"",name:"onToggle",required:!1,type:{name:"((event: any) => void)"}},onTransitionEnd:{defaultValue:null,description:"",name:"onTransitionEnd",required:!1,type:{name:"((event: any) => void)"}},format:{defaultValue:null,description:"Input format based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table). Supported values are: `y`, `M`, `MM`, `MMM`, `MMMM`, `d`, `dd`.\n\n**Note**: When using SSR, setting this prop may help resolving hydration errors caused by locale mismatch between server and client.\n@example 'y-MM-dd'",name:"format",required:!1,type:{name:"string"}},calendarAriaLabel:{defaultValue:null,description:"`aria-label` for the calendar button.\n@example 'Toggle calendar'",name:"calendarAriaLabel",required:!1,type:{name:"string"}},calendarIcon:{defaultValue:null,description:`Content of the calendar button. Setting the value explicitly to \`null\` will hide the icon.
@example 'Calendar'
@example <CalendarIcon />
@example CalendarIcon`,name:"calendarIcon",required:!1,type:{name:"IconOrRenderFunction"}},calendarProps:{defaultValue:null,description:"Props to pass to React-Calendar component.",name:"calendarProps",required:!1,type:{name:"CalendarProps"}},clearAriaLabel:{defaultValue:null,description:"`aria-label` for the clear button.\n@example 'Clear value'",name:"clearAriaLabel",required:!1,type:{name:"string"}},clearIcon:{defaultValue:null,description:`Content of the clear button. Setting the value explicitly to \`null\` will hide the icon.
@example 'Clear'
@example <ClearIcon />
@example ClearIcon`,name:"clearIcon",required:!1,type:{name:"IconOrRenderFunction"}},closeCalendar:{defaultValue:{value:"true"},description:`Whether to close the calendar on value selection.

**Note**: It's recommended to use \`shouldCloseCalendar\` function instead.
@example false`,name:"closeCalendar",required:!1,type:{name:"boolean"}},"data-testid":{defaultValue:null,description:"`data-testid` attribute for the main React-Date-Picker `<div>` element.\n@example 'date-picker'",name:"data-testid",required:!1,type:{name:"string"}},dayAriaLabel:{defaultValue:null,description:"`aria-label` for the day input.\n@example 'Day'",name:"dayAriaLabel",required:!1,type:{name:"string"}},dayPlaceholder:{defaultValue:{value:"'--'"},description:"`placeholder` for the day input.\n@example 'dd'",name:"dayPlaceholder",required:!1,type:{name:"string"}},disableCalendar:{defaultValue:{value:"false"},description:"When set to `true`, will remove the calendar and the button toggling its visibility.\n@example true",name:"disableCalendar",required:!1,type:{name:"boolean"}},isOpen:{defaultValue:{value:"false"},description:`Whether the calendar should be opened.
@example true`,name:"isOpen",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:`Locale that should be used by the date picker and the calendar. Can be any [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag).

**Note**: When using SSR, setting this prop may help resolving hydration errors caused by locale mismatch between server and client.
@example 'hu-HU'`,name:"locale",required:!1,type:{name:"string"}},maxDate:{defaultValue:null,description:`Maximum date that the user can select. Periods partially overlapped by maxDate will also be selectable, although React-Date-Picker will ensure that no later date is selected.
@example new Date()`,name:"maxDate",required:!1,type:{name:"Date"}},maxDetail:{defaultValue:{value:"'month'"},description:'The most detailed calendar view that the user shall see. View defined here also becomes the one on which clicking an item in the calendar will select a date and pass it to onChange. Can be `"month"`, `"year"`, `"decade"` or `"century"`.\n@example \'year\'',name:"maxDetail",required:!1,type:{name:"enum",value:[{value:'"month"'},{value:'"century"'},{value:'"decade"'},{value:'"year"'}]}},minDate:{defaultValue:null,description:`Minimum date that the user can select. Periods partially overlapped by minDate will also be selectable, although React-Date-Picker will ensure that no earlier date is selected.
@example new Date()`,name:"minDate",required:!1,type:{name:"Date"}},monthAriaLabel:{defaultValue:null,description:"`aria-label` for the month input.\n@example 'Month'",name:"monthAriaLabel",required:!1,type:{name:"string"}},monthPlaceholder:{defaultValue:{value:"'--'"},description:"`placeholder` for the month input.\n@example 'mm'",name:"monthPlaceholder",required:!1,type:{name:"string"}},nativeInputAriaLabel:{defaultValue:null,description:"`aria-label` for the native date input.\n@example 'Date'",name:"nativeInputAriaLabel",required:!1,type:{name:"string"}},onCalendarClose:{defaultValue:null,description:`Function called when the calendar closes.
@example () => alert('Calendar closed')`,name:"onCalendarClose",required:!1,type:{name:"(() => void)"}},onCalendarOpen:{defaultValue:null,description:`Function called when the calendar opens.
@example () => alert('Calendar opened')`,name:"onCalendarOpen",required:!1,type:{name:"(() => void)"}},onInvalidChange:{defaultValue:null,description:`Function called when the user picks an invalid date.
@example () => alert('Invalid date')`,name:"onInvalidChange",required:!1,type:{name:"(() => void)"}},openCalendarOnFocus:{defaultValue:{value:"true"},description:"Whether to open the calendar on input focus. **Note**: It's recommended to use `shouldOpenCalendar` function instead.\n@example false",name:"openCalendarOnFocus",required:!1,type:{name:"boolean"}},portalContainer:{defaultValue:null,description:`Element to render the calendar in using portal.
@example document.getElementById('my-div')`,name:"portalContainer",required:!1,type:{name:"HTMLElement | null"}},returnValue:{defaultValue:{value:"'start'"},description:'Which dates shall be passed by the calendar to the onChange function and onClick{Period} functions. Can be `"start"`, `"end"` or `"range"`. The latter will cause an array with start and end values to be passed.\n@example \'range\'',name:"returnValue",required:!1,type:{name:"enum",value:[{value:'"range"'},{value:'"start"'},{value:'"end"'}]}},shouldCloseCalendar:{defaultValue:null,description:'Function called before the calendar closes. `reason` can be `"buttonClick"`, `"escape"`, `"outsideAction"`, or `"select"`. If it returns `false`, the calendar will not close.\n@example ({ reason }) => reason !== \'outsideAction\'',name:"shouldCloseCalendar",required:!1,type:{name:"((props: { reason: CloseReason; }) => boolean)"}},shouldOpenCalendar:{defaultValue:null,description:'Function called before the calendar opens. `reason` can be `"buttonClick"` or `"focus"`. If it returns `false`, the calendar will not open.\n@example ({ reason }) => reason !== \'focus\'',name:"shouldOpenCalendar",required:!1,type:{name:"((props: { reason: OpenReason; }) => boolean)"}},showLeadingZeros:{defaultValue:{value:"false"},description:`Whether leading zeros should be rendered in date inputs.
@example true`,name:"showLeadingZeros",required:!1,type:{name:"boolean"}},yearAriaLabel:{defaultValue:null,description:"`aria-label` for the year input.\n@example 'Year'",name:"yearAriaLabel",required:!1,type:{name:"string"}},yearPlaceholder:{defaultValue:{value:"'----'"},description:"`placeholder` for the year input.\n@example 'yyyy'",name:"yearPlaceholder",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string | Date | Date[]"}},displayDateFormat:{defaultValue:null,description:"",name:"displayDateFormat",required:!1,type:{name:"string"}},inline:{defaultValue:null,description:"",name:"inline",required:!1,type:{name:"boolean"}}}}}catch{}try{TimePicker.displayName="TimePicker",TimePicker.__docgenInfo={description:"",displayName:"TimePicker",props:{localeText:{defaultValue:null,description:"",name:"localeText",required:!1,type:{name:"{ days?: string; hours?: string; minutes?: string | undefined; seconds?: string | undefined; } | undefined"}},doDisabled:{defaultValue:null,description:"Do we NOT use day/hour/minute/second?",name:"doDisabled",required:!1,type:{name:"{ days?: boolean; hours?: boolean; minutes?: boolean | undefined; seconds?: boolean | undefined; } | undefined"}},onChange:{defaultValue:null,description:"Use 3rd parameter to get duration in milliseconds",name:"onChange",required:!1,type:{name:"((unmaskedValue: string, maskedValue: string, durationInMs: number) => void)"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"number"}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"number"}},closeOnClick:{defaultValue:null,description:"Should we close the popover on item click",name:"closeOnClick",required:!1,type:{name:"boolean"}},closeOnFocus:{defaultValue:null,description:"Should we close the popover on item focus",name:"closeOnFocus",required:!1,type:{name:"boolean"}},separatedBySpace:{defaultValue:null,description:"",name:"separatedBySpace",required:!1,type:{name:"boolean"}},dropdownItemProps:{defaultValue:null,description:"",name:"dropdownItemProps",required:!1,type:{name:"{ minDuration?: number; maxDuration?: number; interval?: number | undefined; inclusiveEnd?: boolean | undefined; formatItem?: ((duration: Duration, durationInMs: number) => ReactNode) | undefined; isItemValid?: ((durationInMs: number) => boolean) | undefined; } | undefined"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLInputElement>"}},borderType:{defaultValue:null,description:"",name:"borderType",required:!1,type:{name:"enum",value:[{value:'"fill"'},{value:'"outline"'},{value:'"plain"'}]}},caption:{defaultValue:null,description:"",name:"caption",required:!1,type:{name:"ReactNode"}},captionIcon:{defaultValue:null,description:"",name:"captionIcon",required:!1,type:{name:"[IconPrefix, string]"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"error"'}]}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},leadingAdornment:{defaultValue:null,description:"",name:"leadingAdornment",required:!1,type:{name:"FormAdornment"}},leadingAdornmentOnClick:{defaultValue:null,description:"",name:"leadingAdornmentOnClick",required:!1,type:{name:"(() => void)"}},trailingAdornment:{defaultValue:null,description:"",name:"trailingAdornment",required:!1,type:{name:"FormAdornment"}},trailingAdornmentOnClick:{defaultValue:null,description:"",name:"trailingAdornmentOnClick",required:!1,type:{name:"(() => void)"}},hasContent:{defaultValue:null,description:"",name:"hasContent",required:!1,type:{name:"boolean"}},debounceParam:{defaultValue:null,description:"",name:"debounceParam",required:!1,type:{name:"{ debounceTime: number; flushOnUnmount?: boolean; }"}},formControl:{defaultValue:null,description:"",name:"formControl",required:!1,type:{name:"Control<any>"}},maskOptions:{defaultValue:null,description:"",name:"maskOptions",required:!1,type:{name:"AnyMaskedOptions"}},handlerRef:{defaultValue:null,description:"",name:"handlerRef",required:!1,type:{name:"Ref<MaskedInputHandle>"}}}}}catch{}try{DurationPicker.displayName="DurationPicker",DurationPicker.__docgenInfo={description:"",displayName:"DurationPicker",props:{localeText:{defaultValue:null,description:"",name:"localeText",required:!1,type:{name:"{ days?: string; hours?: string; minutes?: string | undefined; seconds?: string | undefined; } | undefined"}},doDisabled:{defaultValue:null,description:"Do we NOT use day/hour/minute/second?",name:"doDisabled",required:!1,type:{name:"{ days?: boolean; hours?: boolean; minutes?: boolean | undefined; seconds?: boolean | undefined; } | undefined"}},onChange:{defaultValue:null,description:"Use 3rd parameter to get duration in milliseconds",name:"onChange",required:!1,type:{name:"((unmaskedValue: string, maskedValue: string, durationInMs: number) => void)"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"number"}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"number"}},closeOnClick:{defaultValue:{value:"true"},description:"Should we close the popover on item click",name:"closeOnClick",required:!1,type:{name:"boolean"}},closeOnFocus:{defaultValue:null,description:"Should we close the popover on item focus",name:"closeOnFocus",required:!1,type:{name:"boolean"}},separatedBySpace:{defaultValue:{value:"true"},description:"",name:"separatedBySpace",required:!1,type:{name:"boolean"}},dropdownItemProps:{defaultValue:null,description:"",name:"dropdownItemProps",required:!1,type:{name:"{ minDuration?: number; maxDuration?: number; interval?: number | undefined; inclusiveEnd?: boolean | undefined; formatItem?: ((duration: Duration, durationInMs: number) => ReactNode) | undefined; isItemValid?: ((durationInMs: number) => boolean) | undefined; } | undefined"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLInputElement>"}},borderType:{defaultValue:null,description:"",name:"borderType",required:!1,type:{name:"enum",value:[{value:'"fill"'},{value:'"outline"'},{value:'"plain"'}]}},caption:{defaultValue:null,description:"",name:"caption",required:!1,type:{name:"ReactNode"}},captionIcon:{defaultValue:null,description:"",name:"captionIcon",required:!1,type:{name:"[IconPrefix, string]"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"error"'}]}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},leadingAdornment:{defaultValue:null,description:"",name:"leadingAdornment",required:!1,type:{name:"FormAdornment"}},leadingAdornmentOnClick:{defaultValue:null,description:"",name:"leadingAdornmentOnClick",required:!1,type:{name:"(() => void)"}},trailingAdornment:{defaultValue:null,description:"",name:"trailingAdornment",required:!1,type:{name:"FormAdornment"}},trailingAdornmentOnClick:{defaultValue:null,description:"",name:"trailingAdornmentOnClick",required:!1,type:{name:"(() => void)"}},hasContent:{defaultValue:null,description:"",name:"hasContent",required:!1,type:{name:"boolean"}},debounceParam:{defaultValue:null,description:"",name:"debounceParam",required:!1,type:{name:"{ debounceTime: number; flushOnUnmount?: boolean; }"}},formControl:{defaultValue:null,description:"",name:"formControl",required:!1,type:{name:"Control<any>"}},maskOptions:{defaultValue:null,description:"",name:"maskOptions",required:!1,type:{name:"AnyMaskedOptions"}},handlerRef:{defaultValue:null,description:"",name:"handlerRef",required:!1,type:{name:"Ref<MaskedInputHandle>"}}}}}catch{}try{Icon.displayName="Icon",Icon.__docgenInfo={description:"",displayName:"Icon",props:{icon:{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"[IconPrefix, string]"}},WrapperType:{defaultValue:{value:"div"},description:"",name:"WrapperType",required:!1,type:{name:"enum",value:[{value:'"span"'},{value:'"div"'}]}}}}}catch{}try{Input.displayName="Input",Input.__docgenInfo={description:"",displayName:"Input",props:{borderType:{defaultValue:{value:"outline"},description:"",name:"borderType",required:!1,type:{name:"enum",value:[{value:'"fill"'},{value:'"outline"'},{value:'"plain"'}]}},caption:{defaultValue:null,description:"",name:"caption",required:!1,type:{name:"ReactNode"}},captionIcon:{defaultValue:null,description:"",name:"captionIcon",required:!1,type:{name:"[IconPrefix, string]"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"error"'}]}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},leadingAdornment:{defaultValue:null,description:"",name:"leadingAdornment",required:!1,type:{name:"FormAdornment"}},leadingAdornmentOnClick:{defaultValue:null,description:"",name:"leadingAdornmentOnClick",required:!1,type:{name:"(() => void)"}},trailingAdornment:{defaultValue:null,description:"",name:"trailingAdornment",required:!1,type:{name:"FormAdornment"}},trailingAdornmentOnClick:{defaultValue:null,description:"",name:"trailingAdornmentOnClick",required:!1,type:{name:"(() => void)"}},hasContent:{defaultValue:null,description:"",name:"hasContent",required:!1,type:{name:"boolean"}},debounceParam:{defaultValue:null,description:"",name:"debounceParam",required:!1,type:{name:"{ debounceTime: number; flushOnUnmount?: boolean; }"}},formControl:{defaultValue:null,description:"",name:"formControl",required:!1,type:{name:"Control<any>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLInputElement>"}}}}}catch{}try{Link.displayName="Link",Link.__docgenInfo={description:"",displayName:"Link",props:{colorType:{defaultValue:{value:"primary"},description:"",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"danger"'},{value:'"warning"'},{value:'"info"'},{value:'"neutral"'}]}},iconStart:{defaultValue:null,description:"",name:"iconStart",required:!1,type:{name:"ReactNode | [IconPrefix, string]"}},iconStartClassName:{defaultValue:null,description:"Not necessary if ReactNode is provided as `iconStart`",name:"iconStartClassName",required:!1,type:{name:"string"}},iconEnd:{defaultValue:null,description:"",name:"iconEnd",required:!1,type:{name:"ReactNode | [IconPrefix, string]"}},iconEndClassName:{defaultValue:null,description:"Not necessary if ReactNode is provided as `iconEnd`",name:"iconEndClassName",required:!1,type:{name:"string"}},hideUnderlineByDefault:{defaultValue:null,description:"Should we hide underline by default and only show underline on hover/focus, etc",name:"hideUnderlineByDefault",required:!1,type:{name:"boolean"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLAnchorElement>"}}}}}catch{}try{AsyncCreatableListbox.displayName="AsyncCreatableListbox",AsyncCreatableListbox.__docgenInfo={description:"",displayName:"AsyncCreatableListbox",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},optionList:{defaultValue:null,description:"",name:"optionList",required:!0,type:{name:"OptionType<ListboxOption<Data>>[] | readonly OptionType<ListboxOption<Data>>[]"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"ListboxOnChange<Data, IsMulti>"}},formValidation:{defaultValue:null,description:"",name:"formValidation",required:!1,type:{name:"FormValidationWithController<Form>"}},borderType:{defaultValue:null,description:"",name:"borderType",required:!1,type:{name:"enum",value:[{value:'"fill"'},{value:'"outline"'}]}},caption:{defaultValue:null,description:"",name:"caption",required:!1,type:{name:"ReactNode"}},captionIcon:{defaultValue:null,description:"",name:"captionIcon",required:!1,type:{name:"[IconPrefix, string]"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"error"'}]}},dropdownIndicatorIcon:{defaultValue:null,description:"",name:"dropdownIndicatorIcon",required:!1,type:{name:"[IconPrefix, string]"}}}}}catch{}try{AsyncListbox.displayName="AsyncListbox",AsyncListbox.__docgenInfo={description:"",displayName:"AsyncListbox",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},optionList:{defaultValue:null,description:"",name:"optionList",required:!0,type:{name:"OptionType<ListboxOption<Data>>[] | readonly OptionType<ListboxOption<Data>>[]"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"ListboxOnChange<Data, IsMulti>"}},formValidation:{defaultValue:null,description:"",name:"formValidation",required:!1,type:{name:"FormValidationWithController<Form>"}},borderType:{defaultValue:null,description:"",name:"borderType",required:!1,type:{name:"enum",value:[{value:'"fill"'},{value:'"outline"'}]}},caption:{defaultValue:null,description:"",name:"caption",required:!1,type:{name:"ReactNode"}},captionIcon:{defaultValue:null,description:"",name:"captionIcon",required:!1,type:{name:"[IconPrefix, string]"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"error"'}]}},dropdownIndicatorIcon:{defaultValue:null,description:"",name:"dropdownIndicatorIcon",required:!1,type:{name:"[IconPrefix, string]"}}}}}catch{}try{CreatableListbox.displayName="CreatableListbox",CreatableListbox.__docgenInfo={description:"",displayName:"CreatableListbox",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},optionList:{defaultValue:null,description:"",name:"optionList",required:!0,type:{name:"OptionType<ListboxOption<Data>>[] | readonly OptionType<ListboxOption<Data>>[]"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"ListboxOnChange<Data, IsMulti>"}},formValidation:{defaultValue:null,description:"",name:"formValidation",required:!1,type:{name:"FormValidationWithController<Form>"}},borderType:{defaultValue:null,description:"",name:"borderType",required:!1,type:{name:"enum",value:[{value:'"fill"'},{value:'"outline"'}]}},caption:{defaultValue:null,description:"",name:"caption",required:!1,type:{name:"ReactNode"}},captionIcon:{defaultValue:null,description:"",name:"captionIcon",required:!1,type:{name:"[IconPrefix, string]"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"error"'}]}},dropdownIndicatorIcon:{defaultValue:null,description:"",name:"dropdownIndicatorIcon",required:!1,type:{name:"[IconPrefix, string]"}}}}}catch{}try{Listbox.displayName="Listbox",Listbox.__docgenInfo={description:"",displayName:"Listbox",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},optionList:{defaultValue:null,description:"",name:"optionList",required:!0,type:{name:"OptionType<ListboxOption<Data>>[] | readonly OptionType<ListboxOption<Data>>[]"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"ListboxOnChange<Data, IsMulti>"}},formValidation:{defaultValue:null,description:"",name:"formValidation",required:!1,type:{name:"FormValidationWithController<Form>"}},borderType:{defaultValue:null,description:"",name:"borderType",required:!1,type:{name:"enum",value:[{value:'"fill"'},{value:'"outline"'}]}},caption:{defaultValue:null,description:"",name:"caption",required:!1,type:{name:"ReactNode"}},captionIcon:{defaultValue:null,description:"",name:"captionIcon",required:!1,type:{name:"[IconPrefix, string]"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"error"'}]}},dropdownIndicatorIcon:{defaultValue:null,description:"",name:"dropdownIndicatorIcon",required:!1,type:{name:"[IconPrefix, string]"}}}}}catch{}try{MaskedInput.displayName="MaskedInput",MaskedInput.__docgenInfo={description:"",displayName:"MaskedInput",props:{borderType:{defaultValue:null,description:"",name:"borderType",required:!1,type:{name:"enum",value:[{value:'"fill"'},{value:'"outline"'},{value:'"plain"'}]}},caption:{defaultValue:null,description:"",name:"caption",required:!1,type:{name:"ReactNode"}},captionIcon:{defaultValue:null,description:"",name:"captionIcon",required:!1,type:{name:"[IconPrefix, string]"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"error"'}]}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},leadingAdornment:{defaultValue:null,description:"",name:"leadingAdornment",required:!1,type:{name:"FormAdornment"}},leadingAdornmentOnClick:{defaultValue:null,description:"",name:"leadingAdornmentOnClick",required:!1,type:{name:"(() => void)"}},trailingAdornment:{defaultValue:null,description:"",name:"trailingAdornment",required:!1,type:{name:"FormAdornment"}},trailingAdornmentOnClick:{defaultValue:null,description:"",name:"trailingAdornmentOnClick",required:!1,type:{name:"(() => void)"}},hasContent:{defaultValue:null,description:"",name:"hasContent",required:!1,type:{name:"boolean"}},debounceParam:{defaultValue:null,description:"",name:"debounceParam",required:!1,type:{name:"{ debounceTime: number; flushOnUnmount?: boolean; }"}},formControl:{defaultValue:null,description:"",name:"formControl",required:!1,type:{name:"Control<any>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLInputElement>"}},maskOptions:{defaultValue:null,description:"",name:"maskOptions",required:!0,type:{name:"AnyMaskedOptions"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((unmaskedValue: string, maskedValue: string) => void)"}},handlerRef:{defaultValue:null,description:"",name:"handlerRef",required:!1,type:{name:"Ref<MaskedInputHandle>"}}}}}catch{}try{Menu.displayName="Menu",Menu.__docgenInfo={description:"Note, the menu dropdown is relative to the outer container",displayName:"Menu",props:{onItemChosen:{defaultValue:null,description:"",name:"onItemChosen",required:!1,type:{name:"((item: Item, index: number) => void)"}},menuContainerAs:{defaultValue:null,description:"",name:"menuContainerAs",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},itemContainerOnRightSide:{defaultValue:null,description:"",name:"itemContainerOnRightSide",required:!1,type:{name:"boolean"}},useDivider:{defaultValue:{value:"true"},description:"",name:"useDivider",required:!1,type:{name:"boolean"}},menuProps:{defaultValue:null,description:"",name:"menuProps",required:!1,type:{name:"any"}},menuItemsProps:{defaultValue:null,description:"",name:"menuItemsProps",required:!1,type:{name:'(CleanProps<ElementType, "anchor" | ItemsPropsWeControl | "portal" | "modal" | "transition" | "static" | "unmount"> & OurProps<...> & { ...; } & { ...; } & { ...; })'}},menuOpenerProps:{defaultValue:null,description:"",name:"menuOpenerProps",required:!1,type:{name:'(Pick<object, never> & CleanProps<ElementType, "disabled" | "autoFocus" | ButtonPropsWeControl> & OurProps<ElementType, ButtonRenderPropArg> & { ...; } & { ...; } & { ...; })'}},renderCustomMenuOpener:{defaultValue:null,description:"",name:"renderCustomMenuOpener",required:!1,type:{name:"((menuOpen: boolean) => ReactNode)"}},menuItemList:{defaultValue:null,description:"",name:"menuItemList",required:!0,type:{name:"Item[] | readonly Item[]"}},renderWholeItem:{defaultValue:null,description:"Render whole item, including the container\n\nUse `renderItemContent` or `renderItem` to render just the content of the item\n and leave accessbility and styling of the container handled by the component",name:"renderWholeItem",required:!1,type:{name:"((item: Item, index: number, menuOpen: boolean) => ReactNode)"}},renderItem:{defaultValue:null,description:"Render just the inner of the item and let the lib handle accessiblity\n\nUnnecessary if `renderItem` is present",name:"renderItem",required:!1,type:{name:"((item: Item, index: number, props: { active: boolean; disabled: boolean; menuOpen: boolean; }) => ReactElement<unknown, string | JSXElementConstructor<any>>)"}},renderItemContent:{defaultValue:null,description:"Used to render each item, unnecessary if `renderItem` or `renderWholeItem` is present",name:"renderItemContent",required:!1,type:{name:"((item: Item, index: number, props: { active: boolean; disabled: boolean; menuOpen: boolean; }) => ReactNode)"}}}}}catch{}try{Modal.displayName="Modal",Modal.__docgenInfo={description:"",displayName:"Modal",props:{isOpen:{defaultValue:null,description:"",name:"isOpen",required:!0,type:{name:"boolean"}},header:{defaultValue:null,description:"",name:"header",required:!1,type:{name:"ReactNode"}},footer:{defaultValue:null,description:"",name:"footer",required:!1,type:{name:"ReactNode"}},onClose:{defaultValue:null,description:"Use for more fine-grained control on when to trigger the close",name:"onClose",required:!1,type:{name:"((triggeredOn: OnCloseTriggeredOn) => void)"}},showCloseButton:{defaultValue:{value:"true"},description:"",name:"showCloseButton",required:!1,type:{name:"boolean"}},closeButtonIcon:{defaultValue:{value:'["fas", "times"]'},description:"",name:"closeButtonIcon",required:!1,type:{name:"[IconPrefix, string]"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},headerClassName:{defaultValue:null,description:"",name:"headerClassName",required:!1,type:{name:"string"}},bodyClassName:{defaultValue:null,description:"",name:"bodyClassName",required:!1,type:{name:"string"}},footerClassName:{defaultValue:null,description:"",name:"footerClassName",required:!1,type:{name:"string"}},isFullscreen:{defaultValue:null,description:"",name:"isFullscreen",required:!1,type:{name:"boolean"}},animationType:{defaultValue:{value:"fade-down"},description:"The type of animation to use when opening the modal\n- `fade-down`: The modal will fade in and slide down from the top\n- `natural`: The modal will expand from the center of the screen - NOTE: currently this is not working as expected\n- `CustomAnimationVariant`: Custom animation variants - when the modal is opened, the modal will animate from the `hidden` variant to the `visible` variant and vice versa when the modal is closed. Check [this doc](https://www.framer.com/motion/animation/#variants) for more information on how to create custom variants",name:"animationType",required:!1,type:{name:'"fade-down" | "natural" | CustomAnimationVariant'}},overlayAnimation:{defaultValue:null,description:`Animation for overlay

Check [this doc](https://www.framer.com/motion/animation/#variants) for more information on how to create custom variants`,name:"overlayAnimation",required:!1,type:{name:"{ variants?: CustomAnimationVariant; transition?: Transition$1; } | undefined"}},animationAnchorElement:{defaultValue:null,description:"",name:"animationAnchorElement",required:!1,type:{name:"HTMLElement | null"}},targetSize:{defaultValue:null,description:"",name:"targetSize",required:!1,type:{name:"{ width?: number; height?: number; } | undefined"}}}}}catch{}try{MultiStepTabGroup.displayName="MultiStepTabGroup",MultiStepTabGroup.__docgenInfo={description:"",displayName:"MultiStepTabGroup",props:{selectedIndex:{defaultValue:null,description:"",name:"selectedIndex",required:!0,type:{name:"number"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((index: number) => void)"}},colorType:{defaultValue:{value:"secondary"},description:"",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"danger"'},{value:'"warning"'},{value:'"info"'},{value:'"neutral"'}]}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},numberOfTabs:{defaultValue:null,description:"",name:"numberOfTabs",required:!0,type:{name:"number"}},getTabContent:{defaultValue:null,description:"",name:"getTabContent",required:!0,type:{name:"(index: number, selected: boolean) => ReactNode"}},getTabPanelProps:{defaultValue:null,description:"",name:"getTabPanelProps",required:!1,type:{name:"((index: number) => HTMLAttributes<HTMLDivElement>)"}},renderTabPanel:{defaultValue:null,description:"",name:"renderTabPanel",required:!0,type:{name:"(index: number) => ReactNode"}},contentPreset:{defaultValue:{value:"bubble-step"},description:"",name:"contentPreset",required:!1,type:{name:'"bubble-step" | null'}},getBubbleContent:{defaultValue:null,description:"",name:"getBubbleContent",required:!1,type:{name:"((index: number, selected: boolean) => ReactNode)"}},preventSelectIfSelected:{defaultValue:{value:"true"},description:"Prevent onChange to bubble if the same selected index is clicked again",name:"preventSelectIfSelected",required:!1,type:{name:"boolean"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}try{Paginate.displayName="Paginate",Paginate.__docgenInfo={description:"",displayName:"Paginate",props:{nextLabelIcon:{defaultValue:null,description:"Use nextLabel if you want to override the component completely",name:"nextLabelIcon",required:!1,type:{name:"[IconPrefix, string]"}},nextLabelButtonProps:{defaultValue:null,description:"",name:"nextLabelButtonProps",required:!1,type:{name:"ButtonProps"}},previousLabelIcon:{defaultValue:null,description:"Use previousLabel if you want to override the component completely",name:"previousLabelIcon",required:!1,type:{name:"[IconPrefix, string]"}},previousLabelButtonProps:{defaultValue:null,description:"",name:"previousLabelButtonProps",required:!1,type:{name:"ButtonProps"}},colorType:{defaultValue:{value:"secondary"},description:"",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"danger"'},{value:'"warning"'},{value:'"info"'},{value:'"neutral"'}]}}}}}catch{}try{Popover.displayName="Popover",Popover.__docgenInfo={description:`TODO: improve this export

To close popover manually, add a PopoverButton from`,displayName:"Popover",props:{popoverContainerAs:{defaultValue:null,description:"",name:"popoverContainerAs",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},popoverProps:{defaultValue:null,description:"",name:"popoverProps",required:!1,type:{name:"any"}},popoverOpenerProps:{defaultValue:null,description:"",name:"popoverOpenerProps",required:!1,type:{name:'(Pick<object, never> & CleanProps<"button", "disabled" | "autoFocus" | ButtonPropsWeControl> & OurProps<"button", ButtonRenderPropArg> & { ...; } & { ...; })'}},popoverPanelProps:{defaultValue:null,description:"",name:"popoverPanelProps",required:!1,type:{name:"Partial<PopoverPanelProps>"}},popperProps:{defaultValue:null,description:"",name:"popperProps",required:!1,type:{name:"Partial<PopoverProps>"}}}}}catch{}try{RadioGroup.displayName="RadioGroup",RadioGroup.__docgenInfo={description:"",displayName:"RadioGroup",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},itemClassName:{defaultValue:null,description:"",name:"itemClassName",required:!1,type:{name:"string"}},itemClassNameGetter:{defaultValue:null,description:"",name:"itemClassNameGetter",required:!1,type:{name:"((item: Data, index: number) => string)"}},dataList:{defaultValue:null,description:"",name:"dataList",required:!0,type:{name:"Data[]"}},defaultSelectedIndex:{defaultValue:{value:"-1"},description:"",name:"defaultSelectedIndex",required:!1,type:{name:"number"}},selectedIndex:{defaultValue:null,description:"",name:"selectedIndex",required:!1,type:{name:"number"}},getValue:{defaultValue:null,description:"",name:"getValue",required:!0,type:{name:"(data: Data) => Value"}},checkOptionDisable:{defaultValue:null,description:"",name:"checkOptionDisable",required:!1,type:{name:"((data: Data, index: number) => boolean)"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((data: Data, index: number) => void)"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},radioGroupLabel:{defaultValue:null,description:"",name:"radioGroupLabel",required:!1,type:{name:"ReactNode"}},renderOption:{defaultValue:null,description:"",name:"renderOption",required:!1,type:{name:"GetFunction<Data>"}},getLabel:{defaultValue:null,description:"",name:"getLabel",required:!1,type:{name:"GetFunction<Data>"}},getDescription:{defaultValue:null,description:"",name:"getDescription",required:!1,type:{name:"GetFunction<Data>"}},leftLabel:{defaultValue:null,description:"",name:"leftLabel",required:!1,type:{name:"boolean"}},formValidation:{defaultValue:null,description:"",name:"formValidation",required:!1,type:{name:"FormValidationWithController<FormFields>"}},colorType:{defaultValue:{value:"neutral"},description:"",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"danger"'},{value:'"warning"'},{value:'"info"'},{value:'"neutral"'}]}}}}}catch{}try{Slider.displayName="Slider",Slider.__docgenInfo={description:"",displayName:"Slider",props:{onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(values: number[]) => void"}},max:{defaultValue:null,description:"",name:"max",required:!0,type:{name:"number"}},min:{defaultValue:null,description:"",name:"min",required:!0,type:{name:"number"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"number"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},useDefaultMark:{defaultValue:null,description:"",name:"useDefaultMark",required:!1,type:{name:"boolean"}},valueList:{defaultValue:null,description:"",name:"valueList",required:!0,type:{name:"number[]"}},allowOverlap:{defaultValue:null,description:"",name:"allowOverlap",required:!1,type:{name:"boolean"}},direction:{defaultValue:null,description:"",name:"direction",required:!1,type:{name:"enum",value:[{value:'"to right"'},{value:'"to left"'},{value:'"to bottom"'},{value:'"to top"'}]}},onFinalChange:{defaultValue:null,description:"",name:"onFinalChange",required:!1,type:{name:"((values: number[]) => void)"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},draggableTrack:{defaultValue:null,description:"",name:"draggableTrack",required:!1,type:{name:"boolean"}},rtl:{defaultValue:null,description:"",name:"rtl",required:!1,type:{name:"boolean"}},renderMark:{defaultValue:null,description:"",name:"renderMark",required:!1,type:{name:"((params: IRenderMarkParams) => ReactNode)"}},renderTrack:{defaultValue:null,description:"",name:"renderTrack",required:!1,type:{name:"((params: IRenderTrackParams) => ReactNode)"}},renderThumb:{defaultValue:null,description:"",name:"renderThumb",required:!1,type:{name:"((params: IRenderThumbParams) => ReactNode)"}},renderThumbValue:{defaultValue:null,description:"",name:"renderThumbValue",required:!1,type:{name:"((value: number) => ReactNode)"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<Range>"}}}}}catch{}try{TabGroup.displayName="TabGroup",TabGroup.__docgenInfo={description:"",displayName:"TabGroup",props:{selectedIndex:{defaultValue:null,description:"",name:"selectedIndex",required:!1,type:{name:"number"}},defaultSelectedIndex:{defaultValue:null,description:"",name:"defaultSelectedIndex",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((index: number) => void)"}},tabActiveIndicatorProps:{defaultValue:null,description:"",name:"tabActiveIndicatorProps",required:!1,type:{name:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"}},tabActiveIndicatorType:{defaultValue:{value:"underline"},description:"",name:"tabActiveIndicatorType",required:!1,type:{name:"enum",value:[{value:'"pill"'},{value:'"underline"'},{value:'"custom"'}]}},renderIndicator:{defaultValue:{value:"true"},description:"",name:"renderIndicator",required:!1,type:{name:"boolean"}},numberOfTabs:{defaultValue:null,description:"",name:"numberOfTabs",required:!0,type:{name:"number"}},renderWholeTab:{defaultValue:null,description:"Render the entire tab and have total control over accessibility",name:"renderWholeTab",required:!1,type:{name:"((index: number, selected: boolean) => ReactElement<unknown, string | JSXElementConstructor<any>>)"}},renderTab:{defaultValue:null,description:"",name:"renderTab",required:!1,type:{name:"((index: number, selected: boolean) => ReactElement<unknown, string | JSXElementConstructor<any>>)"}},getTabProps:{defaultValue:null,description:"",name:"getTabProps",required:!1,type:{name:'((index: number, selected: boolean) => CleanProps<ElementType, "disabled" | "autoFocus" | TabPropsWeControl> & OurProps<ElementType, TabRenderPropArg> & { ...; } & { ...; } & { ...; })'}},renderTabPanel:{defaultValue:null,description:"",name:"renderTabPanel",required:!0,type:{name:"(index: number, selected: boolean) => ReactElement<unknown, string | JSXElementConstructor<any>>"}},getTabPanelProps:{defaultValue:null,description:"",name:"getTabPanelProps",required:!1,type:{name:'((index: number, selected: boolean) => CleanProps<ElementType, "id" | "tabIndex" | "static" | "unmount" | PanelPropsWeControl> & ... 4 more ... & { ...; })'}},tabGroupProps:{defaultValue:null,description:"",name:"tabGroupProps",required:!1,type:{name:'(CleanProps<ElementType, "disabled" | "autoFocus" | TabPropsWeControl> & OurProps<ElementType, TabRenderPropArg> & { ...; } & { ...; } & { ...; })'}},tabListProps:{defaultValue:null,description:"",name:"tabListProps",required:!1,type:{name:"(CleanProps<ElementType, ListPropsWeControl> & OurProps<ElementType, ListRenderPropArg> & { ...; } & { ...; })"}},tabPanelsProps:{defaultValue:null,description:"",name:"tabPanelsProps",required:!1,type:{name:"(CleanProps<ElementType, never> & OurProps<ElementType, PanelsRenderPropArg> & { className?: any; } & { ...; })"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}try{TextArea.displayName="TextArea",TextArea.__docgenInfo={description:"",displayName:"TextArea",props:{borderType:{defaultValue:{value:"outline"},description:"",name:"borderType",required:!1,type:{name:"enum",value:[{value:'"fill"'},{value:'"outline"'},{value:'"plain"'}]}},caption:{defaultValue:null,description:"",name:"caption",required:!1,type:{name:"ReactNode"}},captionIcon:{defaultValue:null,description:"",name:"captionIcon",required:!1,type:{name:"[IconPrefix, string]"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"error"'}]}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},hasContent:{defaultValue:null,description:"",name:"hasContent",required:!1,type:{name:"boolean"}},debounceParam:{defaultValue:null,description:"",name:"debounceParam",required:!1,type:{name:"{ debounceTime: number; flushOnUnmount?: boolean; }"}},formControl:{defaultValue:null,description:"",name:"formControl",required:!1,type:{name:"Control<any>"}},resize:{defaultValue:{value:"both"},description:"",name:"resize",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"inherit"'},{value:'"inline"'},{value:'"both"'},{value:'"horizontal"'},{value:'"vertical"'},{value:'"initial"'},{value:'"block"'},{value:'"-moz-initial"'},{value:'"revert"'},{value:'"revert-layer"'},{value:'"unset"'}]}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLTextAreaElement>"}}}}}catch{}try{Toggle.displayName="Toggle",Toggle.__docgenInfo={description:"",displayName:"Toggle",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},labelLeft:{defaultValue:{value:"false"},description:"",name:"labelLeft",required:!1,type:{name:"boolean"}},checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean"}},defaultChecked:{defaultValue:null,description:"",name:"defaultChecked",required:!1,type:{name:"boolean"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"OnBlur"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"OnChange"}},formValidation:{defaultValue:null,description:"",name:"formValidation",required:!1,type:{name:"FormValidationWithController<any>"}},type:{defaultValue:{value:"switch"},description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"checkbox"'},{value:'"switch"'}]}},colorType:{defaultValue:{value:"neutral"},description:"",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"danger"'},{value:'"warning"'},{value:'"info"'},{value:'"neutral"'}]}},checkIcon:{defaultValue:{value:'["fas", "check"]'},description:"",name:"checkIcon",required:!1,type:{name:"[IconPrefix, string]"}},containerRef:{defaultValue:null,description:"",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLButtonElement>"}}}}}catch{}try{FadeTransition.displayName="FadeTransition",FadeTransition.__docgenInfo={description:"",displayName:"FadeTransition",props:{show:{defaultValue:null,description:"",name:"show",required:!0,type:{name:"boolean"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}}}catch{}try{Tooltip.displayName="Tooltip",Tooltip.__docgenInfo={description:"",displayName:"Tooltip",props:{containerId:{defaultValue:null,description:"",name:"containerId",required:!1,type:{name:"string"}},refElement:{defaultValue:null,description:"",name:"refElement",required:!0,type:{name:"RefObject<HTMLElement>"}},openOn:{defaultValue:{value:`{
  click: false,
  mouseenter: true,
}`},description:"",name:"openOn",required:!1,type:{name:"Partial<Record<keyof HTMLElementEventMap, boolean>>"}},isOpen:{defaultValue:null,description:"",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:{value:"false"},description:"",name:"defaultOpen",required:!1,type:{name:"boolean"}},popoverOption:{defaultValue:null,description:"",name:"popoverOption",required:!1,type:{name:'(Omit<Partial<Options>, "modifiers"> & { createPopper?: (<TModifier extends Partial<Modifier<any, any>>>(reference: Element | VirtualElement, popper: HTMLElement, options?: Partial<...>) => Instance); modifiers?: readonly Partial<...>[] | undefined; }) | undefined'}},stylePreset:{defaultValue:{value:"preset-1"},description:"",name:"stylePreset",required:!1,type:{name:'"preset-1" | null'}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},offset:{defaultValue:{value:"[0, 20]"},description:"https://popper.js.org/docs/v2/modifiers/offset/",name:"offset",required:!1,type:{name:"[number, number]"}},zIndex:{defaultValue:null,description:"Will be overriden if inModal is set to true",name:"zIndex",required:!1,type:{name:"number"}},inModal:{defaultValue:{value:"false"},description:"",name:"inModal",required:!1,type:{name:"boolean"}}}}}catch{}const d={title:"Welcome",component:n,argTypes:{children:{control:{type:"text"}}},parameters:{controls:{expanded:!0}}},o=e=>i.jsx(n,{...e}),a=o.bind({});a.args={};var l,t,r;a.parameters={...a.parameters,docs:{...(l=a.parameters)==null?void 0:l.docs,source:{originalSource:"args => <Thing {...args} />",...(r=(t=a.parameters)==null?void 0:t.docs)==null?void 0:r.source}}};const s=["Default"];export{a as Default,s as __namedExportsOrder,d as default};
