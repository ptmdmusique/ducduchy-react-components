import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{r as t,R as j}from"./index-BCtMShv3.js";import{C as xe,u as Te}from"./index.esm--LincS5R.js";import{c as W,C as V,s as $}from"./index-KpAVk5lk.js";import{n as Se}from"./index.browser-OxPLOBIU.js";import{$ as $e,a as je}from"./useFocusRing-D4bu8X2q.js";import{w as ke,e as Re}from"./use-resolve-button-type-DNd3Xgnw.js";import{l as Ve,T as we,p as Ee,j as Ne}from"./form-fields-CrT2I_7K.js";import{K as Fe,L as ne,y as Ce,p as Pe,a as D,_ as qe}from"./use-sync-refs-CZ2KMCOF.js";import{H as De,w as Le,a as Ie,U as _e}from"./description-75re-mSO.js";import{Q as Me,K as We,u as He,I as Be}from"./label-BRHKpGXr.js";import{r as Ke}from"./bugs-DpEN4NTH.js";import{o as z}from"./keyboard-tlvg-gRs.js";import{I as Ge}from"./Icon-DLP5P1Ct.js";import{z as Ae}from"./animation-CUZBsLrg.js";import{B as ze}from"./Button-Dw10h_TB.js";import{T as J}from"./Tooltip-D-Ed1I9N.js";import"./index-BqCLlfdy.js";import"./index-D-fs5e6L.js";import"./hidden-CkFg_2Sb.js";import"./index-CvPWi8JN.js";import"./use-is-mounted-suvdIMg-.js";import"./use-server-handoff-complete-C8_JXbTh.js";let B=t.createContext(null);B.displayName="GroupContext";let Je=t.Fragment;function Ue(r){var o;let[a,l]=t.useState(null),[p,m]=We(),[c,n]=Le(),f=t.useMemo(()=>({switch:a,setSwitch:l}),[a,l]),u={},k=r,v=ne();return j.createElement(n,{name:"Switch.Description",value:c},j.createElement(m,{name:"Switch.Label",value:p,props:{htmlFor:(o=f.switch)==null?void 0:o.id,onClick(x){a&&(x.currentTarget instanceof HTMLLabelElement&&x.preventDefault(),a.click(),a.focus({preventScroll:!0}))}}},j.createElement(B.Provider,{value:f},v({ourProps:u,theirProps:k,slot:{},defaultTag:Je,name:"Switch.Group"}))))}let Ye="button";function Oe(r,o){var a;let l=t.useId(),p=He(),m=Ie(),{id:c=p||`headlessui-switch-${l}`,disabled:n=m||!1,checked:f,defaultChecked:u,onChange:k,name:v,value:x,form:_,autoFocus:T=!1,...S}=r,R=t.useContext(B),[N,F]=t.useState(null),C=t.useRef(null),M=Ce(C,o,R===null?null:R.setSwitch,F),g=Ve(u),[b,s]=we(f,k,g??!1),h=Pe(),[P,q]=t.useState(!1),d=D(()=>{q(!0),s==null||s(!b),h.nextFrame(()=>{q(!1)})}),ie=D(i=>{if(Ke(i.currentTarget))return i.preventDefault();i.preventDefault(),d()}),ce=D(i=>{i.key===z.Space?(i.preventDefault(),d()):i.key===z.Enter&&Ee(i.currentTarget)}),ue=D(i=>i.preventDefault()),de=Be(),me=_e(),{isFocusVisible:K,focusProps:pe}=$e({autoFocus:T}),{isHovered:G,hoverProps:fe}=je({isDisabled:n}),{pressed:A,pressProps:ge}=ke({disabled:n}),be=t.useMemo(()=>({checked:b,disabled:n,hover:G,focus:K,active:A,autofocus:T,changing:P}),[b,G,K,A,n,P,T]),he=qe({id:c,ref:M,role:"switch",type:Re(r,N),tabIndex:r.tabIndex===-1?0:(a=r.tabIndex)!=null?a:0,"aria-checked":b,"aria-labelledby":de,"aria-describedby":me,disabled:n||void 0,autoFocus:T,onClick:ie,onKeyUp:ce,onKeyPress:ue},pe,fe,ge),ye=t.useCallback(()=>{if(g!==void 0)return s==null?void 0:s(g)},[s,g]),ve=ne();return j.createElement(j.Fragment,null,v!=null&&j.createElement(Ne,{disabled:n,data:{[v]:x||"on"},overrides:{type:"checkbox",checked:b},form:_,onReset:ye}),ve({ourProps:he,theirProps:S,slot:be,defaultTag:Ye,name:"Switch"}))}let Xe=Fe(Oe),Qe=Ue,Ze=Me,et=De,H=Object.assign(Xe,{Group:Qe,Label:Ze,Description:et});const y=({className:r,label:o,labelLeft:a=!1,checked:l,defaultChecked:p,disabled:m,onBlur:c,onChange:n,formValidation:f,type:u="switch",colorType:k="neutral",checkIcon:v=["fas","check"],containerRef:x,ref:_,...T})=>{const[S,R]=t.useState(l??(p||!1)),N=t.useRef(`toggle---${Se()}`);t.useEffect(()=>{l!==void 0&&R(l)},[l]);const F=()=>e.jsx(H.Label,{className:W("toggle-label",{"toggle-label--left":a}),htmlFor:N.current,children:o}),C=(s,h)=>{const P=d=>{l===void 0&&R(d),n==null||n(d),s==null||s(d)},q=d=>{h==null||h(d),c==null||c(d)};return e.jsx(H.Group,{children:e.jsxs("div",{className:W(`${V}-toggle`,r),ref:x,children:[o&&a&&F(),e.jsx(H,{...T,id:N.current,checked:l??S,onChange:P,onBlur:q,className:W(`${V}-toggle-${u}`,`${V}-toggle-${u}--${k}`,{[`${V}-toggle-${u}--enabled`]:S},{[`${V}-toggle-${u}--disabled`]:m}),disabled:m,ref:_,children:u==="switch"?e.jsx("span",{className:"knob"}):e.jsx(Ae,{show:S,className:"icon",enter:"transition-opacity duration-25",enterFrom:"opacity-0",enterTo:"opacity-100",leave:"transition-opacity duration-25",leaveFrom:"opacity-100",leaveTo:"opacity-0",children:e.jsx(Ge,{icon:v})})}),o&&!a&&F()]})})};if(!f)return C();const{control:M,name:g,rules:b}=f;return e.jsx(xe,{name:g,rules:b,control:M,defaultValue:S,render:({field:{onChange:s,onBlur:h}})=>C(s,h)})};try{y.displayName="Toggle",y.__docgenInfo={description:"",displayName:"Toggle",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},labelLeft:{defaultValue:{value:"false"},description:"",name:"labelLeft",required:!1,type:{name:"boolean"}},checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean"}},defaultChecked:{defaultValue:null,description:"",name:"defaultChecked",required:!1,type:{name:"boolean"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"OnBlur"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"OnChange"}},formValidation:{defaultValue:null,description:"",name:"formValidation",required:!1,type:{name:"FormValidationWithController<any>"}},type:{defaultValue:{value:"switch"},description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"checkbox"'},{value:'"switch"'}]}},colorType:{defaultValue:{value:"neutral"},description:"",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"danger"'},{value:'"warning"'},{value:'"info"'},{value:'"neutral"'}]}},checkIcon:{defaultValue:{value:'["fas", "check"]'},description:"",name:"checkIcon",required:!1,type:{name:"[IconPrefix, string]"}},containerRef:{defaultValue:null,description:"",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLButtonElement>"}}}}}catch{}const kt={title:"Components/Form/Toggle",component:y,argTypes:{formValidation:$,onChange:$,className:$,onBlur:$,checkIcon:$,type:$},parameters:{controls:{expanded:!0}}},se=r=>e.jsx(y,{...r}),w=se.bind({});w.args={label:"My toggle"};const E=se.bind({});E.args={label:"My checkbox",type:"checkbox"};const tt=r=>{const[o,a]=t.useState(null),{handleSubmit:l,control:p}=Te(),m=l(c=>{a(c)});return e.jsxs("form",{onSubmit:m,children:[e.jsx(y,{label:"What a Label",formValidation:{control:p,name:"toggle"},type:"checkbox",...r}),e.jsx(ze,{type:"submit",borderType:"outline",className:"mt-4",children:"Submit"}),o&&e.jsx("pre",{className:"mt-8",children:e.jsxs("code",{children:["Submitted value ",JSON.stringify(o)]})})]})},L=tt.bind({}),I=()=>{const r=t.useRef(null),o=t.useRef(null);return e.jsxs("div",{id:"root",children:[e.jsx("code",{children:"You can forward ref into the component for cool stuff like tooltip too! Try to hover over the toggle below!"}),e.jsx(y,{label:"Toggle ref example",type:"checkbox",ref:r,className:"mb-8 mt-16"}),e.jsx(J,{offset:[0,10],stylePreset:"preset-1",refElement:r,children:e.jsx("p",{children:"A tooltip for just the toggle ╰(*°▽°*)╯"})}),e.jsx(y,{label:"Container ref example",containerRef:o}),e.jsx(J,{offset:[0,10],stylePreset:"preset-1",refElement:o,children:e.jsx("p",{children:"A tooltip for the whole container ╰(*°▽°*)╯"})})]})};var U,Y,O;w.parameters={...w.parameters,docs:{...(U=w.parameters)==null?void 0:U.docs,source:{originalSource:"args => <Toggle {...args} />",...(O=(Y=w.parameters)==null?void 0:Y.docs)==null?void 0:O.source}}};var X,Q,Z;E.parameters={...E.parameters,docs:{...(X=E.parameters)==null?void 0:X.docs,source:{originalSource:"args => <Toggle {...args} />",...(Z=(Q=E.parameters)==null?void 0:Q.docs)==null?void 0:Z.source}}};var ee,te,re;L.parameters={...L.parameters,docs:{...(ee=L.parameters)==null?void 0:ee.docs,source:{originalSource:`args => {
  const [submittedValue, setSubmittedValue] = useState<{
    [key: string]: string;
  } | null>(null);
  const {
    handleSubmit,
    control
  } = useForm();
  const onSubmit = handleSubmit(data => {
    setSubmittedValue(data);
  });
  return <form onSubmit={onSubmit}>\r
      <Toggle label="What a Label" formValidation={{
      control,
      name: "toggle"
    }} type="checkbox" {...args} />\r
\r
      <Button type="submit" borderType="outline" className="mt-4">\r
        Submit\r
      </Button>\r
\r
      {submittedValue && <pre className="mt-8">\r
          <code>Submitted value {JSON.stringify(submittedValue)}</code>\r
        </pre>}\r
    </form>;
}`,...(re=(te=L.parameters)==null?void 0:te.docs)==null?void 0:re.source}}};var oe,ae,le;I.parameters={...I.parameters,docs:{...(oe=I.parameters)==null?void 0:oe.docs,source:{originalSource:`() => {
  const toggleRef = useRef<HTMLButtonElement>(null);
  const containerRef = useRef<HTMLDivElement>(null);
  return <div id="root">\r
      <code>\r
        You can forward ref into the component for cool stuff like tooltip too!\r
        Try to hover over the toggle below!\r
      </code>\r
\r
      <Toggle label="Toggle ref example" type="checkbox" ref={toggleRef} className="mb-8 mt-16" />\r
      <Tooltip offset={[0, 10]} stylePreset="preset-1" refElement={toggleRef}>\r
        <p>A tooltip for just the toggle ╰(*°▽°*)╯</p>\r
      </Tooltip>\r
\r
      <Toggle label="Container ref example" containerRef={containerRef} />\r
      <Tooltip offset={[0, 10]} stylePreset="preset-1" refElement={containerRef}>\r
        <p>A tooltip for the whole container ╰(*°▽°*)╯</p>\r
      </Tooltip>\r
    </div>;
}`,...(le=(ae=I.parameters)==null?void 0:ae.docs)==null?void 0:le.source}}};const Rt=["Default","Checkbox","WithForm","WithRef"];export{E as Checkbox,w as Default,L as WithForm,I as WithRef,Rt as __namedExportsOrder,kt as default};
