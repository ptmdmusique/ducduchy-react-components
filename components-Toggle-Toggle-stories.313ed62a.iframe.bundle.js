"use strict";(self.webpackChunkducduchy_react_components=self.webpackChunkducduchy_react_components||[]).push([[2228],{"./src/components/Toggle/Toggle.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Default:()=>Default,Checkbox:()=>Checkbox,WithForm:()=>WithForm,WithRef:()=>WithRef,__namedExportsOrder:()=>__namedExportsOrder});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),react_hook_form__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/react-hook-form@7.23.0_react@18.2.0/node_modules/react-hook-form/dist/index.esm.mjs"),___WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Toggle/index.ts"),___WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/index.ts"),_resources_story_common__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/resources/story-common.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Form/Toggle",component:___WEBPACK_IMPORTED_MODULE_2__.Z,argTypes:{formValidation:_resources_story_common__WEBPACK_IMPORTED_MODULE_4__.wJ,onChange:_resources_story_common__WEBPACK_IMPORTED_MODULE_4__.wJ,className:_resources_story_common__WEBPACK_IMPORTED_MODULE_4__.wJ,onBlur:_resources_story_common__WEBPACK_IMPORTED_MODULE_4__.wJ,checkIcon:_resources_story_common__WEBPACK_IMPORTED_MODULE_4__.wJ,type:_resources_story_common__WEBPACK_IMPORTED_MODULE_4__.wJ},parameters:{controls:{expanded:!0}}},Template=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(___WEBPACK_IMPORTED_MODULE_2__.Z,{...args});Template.displayName="Template";const Default=Template.bind({});Default.args={label:"My toggle"};const Checkbox=Template.bind({});Checkbox.args={label:"My checkbox",type:"checkbox"};const TemplateWithForm=args=>{const[submittedValue,setSubmittedValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),{handleSubmit,control}=(0,react_hook_form__WEBPACK_IMPORTED_MODULE_1__.cI)(),onSubmit=handleSubmit((data=>{setSubmittedValue(data)}));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("form",{onSubmit,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(___WEBPACK_IMPORTED_MODULE_2__.Z,{label:"What a Label",formValidation:{control,name:"toggle"},type:"checkbox",...args}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(___WEBPACK_IMPORTED_MODULE_3__.zx,{type:"submit",borderType:"outline",className:"mt-4",children:"Submit"}),submittedValue&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("pre",{className:"mt-8",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("code",{children:["Submitted value ",JSON.stringify(submittedValue)]})})]})};TemplateWithForm.displayName="TemplateWithForm";const WithForm=TemplateWithForm.bind({}),WithRef=()=>{const toggleRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),containerRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div",{id:"root",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("code",{children:"You can forward ref into the component for cool stuff like tooltip too! Try to hover over the toggle below!"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(___WEBPACK_IMPORTED_MODULE_2__.Z,{label:"Toggle ref example",type:"checkbox",ref:toggleRef,className:"mb-8 mt-16"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(___WEBPACK_IMPORTED_MODULE_3__.u,{offset:[0,10],stylePreset:"preset-1",refElement:toggleRef,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("p",{children:"A tooltip for just the toggle ╰(*°▽°*)╯"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(___WEBPACK_IMPORTED_MODULE_2__.Z,{label:"Container ref example",containerRef}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(___WEBPACK_IMPORTED_MODULE_3__.u,{offset:[0,10],stylePreset:"preset-1",refElement:containerRef,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("p",{children:"A tooltip for the whole container ╰(*°▽°*)╯"})})]})};WithRef.displayName="WithRef",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <Toggle {...args} />",...Default.parameters?.docs?.source}}},Checkbox.parameters={...Checkbox.parameters,docs:{...Checkbox.parameters?.docs,source:{originalSource:"args => <Toggle {...args} />",...Checkbox.parameters?.docs?.source}}},WithForm.parameters={...WithForm.parameters,docs:{...WithForm.parameters?.docs,source:{originalSource:'args => {\n  const [submittedValue, setSubmittedValue] = useState<{\n    [key: string]: string;\n  } | null>(null);\n  const {\n    handleSubmit,\n    control\n  } = useForm();\n  const onSubmit = handleSubmit(data => {\n    setSubmittedValue(data);\n  });\n  return <form onSubmit={onSubmit}>\r\n      <Toggle label="What a Label" formValidation={{\n      control,\n      name: "toggle"\n    }} type="checkbox" {...args} />\r\n\r\n      <Button type="submit" borderType="outline" className="mt-4">\r\n        Submit\r\n      </Button>\r\n\r\n      {submittedValue && <pre className="mt-8">\r\n          <code>Submitted value {JSON.stringify(submittedValue)}</code>\r\n        </pre>}\r\n    </form>;\n}',...WithForm.parameters?.docs?.source}}},WithRef.parameters={...WithRef.parameters,docs:{...WithRef.parameters?.docs,source:{originalSource:'() => {\n  const toggleRef = useRef<HTMLButtonElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  return <div id="root">\r\n      <code>\r\n        You can forward ref into the component for cool stuff like tooltip too!\r\n        Try to hover over the toggle below!\r\n      </code>\r\n\r\n      <Toggle label="Toggle ref example" type="checkbox" ref={toggleRef} className="mb-8 mt-16" />\r\n      <Tooltip offset={[0, 10]} stylePreset="preset-1" refElement={toggleRef}>\r\n        <p>A tooltip for just the toggle ╰(*°▽°*)╯</p>\r\n      </Tooltip>\r\n\r\n      <Toggle label="Container ref example" containerRef={containerRef} />\r\n      <Tooltip offset={[0, 10]} stylePreset="preset-1" refElement={containerRef}>\r\n        <p>A tooltip for the whole container ╰(*°▽°*)╯</p>\r\n      </Tooltip>\r\n    </div>;\n}',...WithRef.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Checkbox","WithForm","WithRef"]},"./src/components/resources/story-common.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{JU:()=>storyIconOption,wJ:()=>storyDisabledOption});const storyIcons={"✌":["fas","hand-peace"],"🐶":["fas","dog"],"🐱":["fas","cat"]},storyIconOption={options:Object.keys(storyIcons),mapping:storyIcons,control:{type:"select",labels:Object.entries(storyIcons).reduce(((accum,[key,icon])=>({...accum,[key]:`${key} ${icon[1]}`})),{})}},storyDisabledOption={table:{disable:!0}}}}]);